[
  {
    "id": "tp",
    "name": "Suggestions",
    "technologies": ["angular", "aws"],
    "description": "Single Page Application that helps with discovery of points of interets in a specific location",
    "mainImage": "http://papers.co/wallpaper/papers.co-vz23-minimal-blue-dark-line-abstract-digital-pattern-background-36-3840x2400-4k-wallpaper.jpg",
    "images": [
      "http://papers.co/wallpaper/papers.co-vz23-minimal-blue-dark-line-abstract-digital-pattern-background-36-3840x2400-4k-wallpaper.jpg",
      "http://papers.co/wallpaper/papers.co-vz23-minimal-blue-dark-line-abstract-digital-pattern-background-36-3840x2400-4k-wallpaper.jpg",
      "http://papers.co/wallpaper/papers.co-vz23-minimal-blue-dark-line-abstract-digital-pattern-background-36-3840x2400-4k-wallpaper.jpg"
    ],
    "points": [
      "Designed and built modular views with React for seamless integration with other application services",
      "Automated build process using Grunt and S3 of team dependent files for immediate access",
      "Deployed proxy server and microservices with Docker networking and AWS EC2 for modular scalability and maintainability",
      "Configured Webpack to utilize CSS modules during React transpilation to avoid component styling conflicts across services"
    ]
  },
  {
    "id": "fmdb",
    "name": "fMDb",
    "technologies": ["react", "node", "express", "mongodb", "docker", "aws", "jest", "enzyme"],
    "description": "Microservice oriented application emulating the popular IMDb website",
    "mainImage": "https://i.imgur.com/tvAVMw5.jpg",
    "images:": [
    ],
    "points": [
      "Designed and built modular views with React for seamless integration with other application services",
      "Automated build process using Grunt and S3 of team dependent files for immediate access",
      "Deployed proxy server and microservices with Docker networking and AWS EC2 for modular scalability and maintainability",
      "Configured Webpack to utilize CSS modules during React transpilation to avoid component styling conflicts across services"
    ]
  },
  {
    "id": "sdc",
    "name": "",
    "technologies": [],
    "description": "Something",
    "images": [],
    "mainImage": "https://i.imgur.com/tvAVMw5.jpg",
    "points": [
      "Reduced seed data generation of 10 million entries by 85% using Node.js streams to reduce memory overhead and write backpressure",
      "Increaed MongoDB query execution speed up to 95% by indexing fields to increase document selectivity and prevent inefficient collection scanning"
    ]
  }
]
